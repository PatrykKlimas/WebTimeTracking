// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTimeTracking.Data;

namespace WebTimeTracking.Migrations
{
    [DbContext(typeof(TimeTrackingContext))]
    partial class TimeTrackingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebTimeTracking.Models.Boss", b =>
                {
                    b.Property<int>("BossID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeePersonId")
                        .HasColumnType("int");

                    b.HasKey("BossID");

                    b.HasIndex("EmployeePersonId");

                    b.ToTable("Bosses");
                });

            modelBuilder.Entity("WebTimeTracking.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BossID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.HasIndex("BossID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("WebTimeTracking.Models.TimeRecord", b =>
                {
                    b.Property<int>("TimeRocordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TimeTrackingID")
                        .HasColumnType("int");

                    b.HasKey("TimeRocordID");

                    b.HasIndex("TimeTrackingID");

                    b.ToTable("TimeRecords");
                });

            modelBuilder.Entity("WebTimeTracking.Models.TimeTracking", b =>
                {
                    b.Property<int>("TimeTrackingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DayWorkingHours")
                        .HasColumnType("float");

                    b.Property<int?>("EmployeePersonId")
                        .HasColumnType("int");

                    b.HasKey("TimeTrackingID");

                    b.HasIndex("EmployeePersonId");

                    b.ToTable("TimeTrackings");
                });

            modelBuilder.Entity("WebTimeTracking.Models.Boss", b =>
                {
                    b.HasOne("WebTimeTracking.Models.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeePersonId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebTimeTracking.Models.Person", b =>
                {
                    b.HasOne("WebTimeTracking.Models.Boss", null)
                        .WithMany("Subordinates")
                        .HasForeignKey("BossID");
                });

            modelBuilder.Entity("WebTimeTracking.Models.TimeRecord", b =>
                {
                    b.HasOne("WebTimeTracking.Models.TimeTracking", null)
                        .WithMany("TimeRecords")
                        .HasForeignKey("TimeTrackingID");
                });

            modelBuilder.Entity("WebTimeTracking.Models.TimeTracking", b =>
                {
                    b.HasOne("WebTimeTracking.Models.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeePersonId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebTimeTracking.Models.Boss", b =>
                {
                    b.Navigation("Subordinates");
                });

            modelBuilder.Entity("WebTimeTracking.Models.TimeTracking", b =>
                {
                    b.Navigation("TimeRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
